{"version":3,"sources":["redux/dataAction.js","components/Search.jsx","components/RegionList.jsx","components/Countrys.jsx","components/pages/ListCountryPage.jsx","components/pages/InfoCountryPage.jsx","App.js","reportWebVitals.js","redux/dataReducer.js","redux/store.js","index.js"],"names":["loadCountry","nameCategory","dispatch","type","payload","axios","get","then","data","addCountry","Search","props","useDispatch","linkText","createRef","className","placeholder","ref","onChange","newText","current","value","AddTextSearch","textSearch","RegionList","regionList","map","item","region","activeCategory","onClick","id","Countrys","country","to","alpha3Code","src","flag","alt","name","capital","population","ListCountryPage","state","useSelector","filter","toLowerCase","includes","useEffect","InfoCountryPage","codeCountry","useParams","infoCountry","area","addInfoCountry","loadInfoCountry","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","dataReducer","action","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e572d7f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const AddTextSearch = (newText) => ({\r\n    type: 'ADD_TEXT_SEARCH', payload: newText\r\n})\r\n\r\nexport const addCountry = (data) => ({\r\n    type: 'ADD_COUNTRY', payload: data\r\n})\r\n\r\nexport const addInfoCountry = (data) => ({\r\n    type: 'ADD_INFO_COUNTRY', payload: data\r\n})\r\n\r\nexport const addActiveCategory = (category) => ({\r\n    type: 'ADD_ACTIVE_CATEGORY', payload: category\r\n})\r\n\r\nexport const loadCountry = (nameCategory) => (dispatch) => {\r\n    dispatch(addActiveCategory(nameCategory))\r\n    axios.get(`https://restcountries.eu/rest/v2/region/${nameCategory}`)\r\n        .then(({ data }) => {\r\n            dispatch(addCountry(data))\r\n        })\r\n}\r\n\r\nexport const loadInfoCountry = (codeCountry) => (dispatch) => {\r\n    axios.get(`https://restcountries.eu/rest/v2/alpha/${codeCountry}`)\r\n        .then(({ data }) => {\r\n            dispatch(addInfoCountry(data))\r\n        })\r\n}","import React, { createRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { AddTextSearch } from '../redux/dataAction';\r\n\r\nconst Search = (props) => {\r\n    const dispatch = useDispatch();\r\n    const linkText = createRef();\r\n\r\n    let changeText = () => {\r\n        let newText = linkText.current.value;\r\n        dispatch(AddTextSearch(newText))\r\n    }\r\n\r\n    return (\r\n        <div className='search'>\r\n            <input className='search__input' type='search' placeholder='Enter the country name' ref={linkText} onChange={changeText} value={props.textSearch} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nimport { loadCountry } from '../redux/dataAction';\r\n\r\nconst RegionList = (props) => {\r\n    const dispatch = useDispatch();\r\n    let onLoadCountry = (region) => {\r\n        dispatch(loadCountry(region))\r\n    }\r\n\r\n    return (\r\n        <div className='regionList'>\r\n\r\n            {\r\n                props.regionList.map((item) => {\r\n                    return (\r\n                        <div className={item.region === props.activeCategory ? 'regionList__item__active' : 'regionList__item'} key={item.id} onClick={() => onLoadCountry(item.region)} >{item.region}</div>\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegionList;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Countrys = (props) => {\r\n    return (\r\n        <div className='country'>\r\n            {\r\n                props.country.map(item => {\r\n                    return (\r\n                        <NavLink to={`/info/${item.alpha3Code}`}>\r\n                            <div className='country__item' key={item.name} >\r\n                                <img src={item.flag} alt={item.name} />\r\n                                <h4>Name: {item.name}</h4>\r\n                                <h4>Capital: {item.capital}</h4>\r\n                                <h4>Population: {item.population} Ppl</h4>\r\n                            </div>\r\n                        </NavLink>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Countrys;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { loadCountry } from '../../redux/dataAction';\r\n\r\nimport Search from '../Search';\r\nimport RegionList from '../RegionList';\r\nimport Countrys from '../Countrys'\r\n\r\n\r\nconst ListCountryPage = () => {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state => ({\r\n      textSearch: state.data.textSearch,\r\n      regionList: state.data.regionList,\r\n      country: state.data.country.filter(item => (\r\n        item.name.toLowerCase().includes(state.data.textSearch.toLowerCase())\r\n      )),\r\n      activeCategory: state.data.activeCategory\r\n  \r\n    }))\r\n  \r\n    useEffect(() => {\r\n      dispatch(loadCountry('Africa'))\r\n    }, [dispatch]);\r\n\r\n    return ( <>\r\n        <Search textSearch={state.textSearch} />\r\n        <RegionList regionList={state.regionList} activeCategory={state.activeCategory}/>\r\n        <Countrys country={state.country} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListCountryPage;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\n\r\nimport { loadInfoCountry } from '../../redux/dataAction'\r\n\r\nconst InfoCountryPage = () => {\r\n    const { codeCountry } = useParams();\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state => ({\r\n        name: state.data.infoCountry.name,\r\n        flag: state.data.infoCountry.flag,\r\n        capital: state.data.infoCountry.capital,\r\n        region: state.data.infoCountry.region,\r\n        population: state.data.infoCountry.population,\r\n        area: state.data.infoCountry.area,\r\n    }))\r\n    useEffect(() => {\r\n        dispatch(loadInfoCountry(codeCountry))\r\n    }, [dispatch, codeCountry])\r\n\r\n    return (\r\n        <div className='infoCountry'>\r\n            <img src={state.flag} alt={state.name}/>\r\n            <div className='infoCountry__text'>\r\n                <p>Name: {state.name}</p>\r\n                <p>Capital: {state.capital} </p>\r\n                <p>Region: {state.region} </p>\r\n                <p>Population: {state.population} Ppl</p>\r\n                <p>Area: {state.area} k/m <sup>2</sup></p>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoCountryPage;\r\n","import React from 'react';\n\nimport { Route } from 'react-router-dom';\nimport ListCountryPage from './components/pages/ListCountryPage';\nimport InfoCountryPage from './components/pages/InfoCountryPage';\n\n\nfunction App() {\n  return (\n    <div className='wrapper'>\n      <div className='content'>\n\n        <Route path='/' exact component={ListCountryPage} />\n        <Route path='/info/:codeCountry' component={InfoCountryPage} />\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {\r\n    country: [],\r\n    infoCountry: [],\r\n    regionList: [\r\n        { id: 1, region: 'Africa', },\r\n        { id: 2, region: 'Americas', },\r\n        { id: 3, region: 'Asia', },\r\n        { id: 4, region: 'Europe', },\r\n        { id: 5, region: 'Oceania', },\r\n    ],\r\n    textSearch: '',\r\n    activeCategory: 'Africa'\r\n}\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'ADD_TEXT_SEARCH':\r\n            return {\r\n                ...state,\r\n                textSearch: action.payload,\r\n            }\r\n        case 'ADD_COUNTRY':\r\n            return {\r\n                ...state,\r\n                textSearch: '',\r\n                country: action.payload,\r\n                infoCountry: []\r\n            }\r\n        case 'ADD_ACTIVE_CATEGORY':\r\n            return {\r\n                ...state,\r\n                activeCategory: action.payload\r\n            }\r\n        case 'ADD_INFO_COUNTRY':\r\n\r\n            return {\r\n                ...state,\r\n                infoCountry: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default dataReducer;\r\n","import { combineReducers, createStore, compose, applyMiddleware } from 'redux';\r\nimport dataReducer from './dataReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst reducers = combineReducers({\r\n    data: dataReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\nReactDOM.render(\n <BrowserRouter>\n  <Provider store ={store}>\n    <App />\n    </Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}